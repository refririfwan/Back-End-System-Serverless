app: your-app
org: your-serverless-account

service: myserverlessproject

provider:
  name: aws
  runtime: nodejs12.x
  environment:
      tableName: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
          - dynamodb:* 
      Resource: '*' 

plugins:
  - serverless-s3-sync

custom:
  tableName: player-points
  s3Sync:
    - bucketName: my-serverless-project-bucket-123123
      localDir: UploadData

functions:
  getUser:
    handler: lambdas/endpoints/getUser.handler
    events:
      - http:
          path: get-user/{ID}
          method: GET
          cors: true
  getPlayerScore:
    handler: lambdas/endpoints/getPlayerScore.handler
    events:
      - http:
          path: get-player-score/{ID}
          method: GET
          cors: true

resources:
  Resources:
    DemoBucketUpload:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: my-serverless-project-bucket-123123
    MyDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST